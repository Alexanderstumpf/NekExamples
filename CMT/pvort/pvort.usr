      subroutine userchk
      include 'SIZE'
      include 'TOTAL'
      include 'CMTDATA'
      include 'PERFECTGAS'

      parameter (lt=lx1*ly1*lz1*lelt)
      common /mystuff/ vrt(lt,3),wk1(lt),wk2(lt)

      integer e,f
      character*44 zefn
      integer luout
      common /usrparm/ reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr
      real reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr

      scale = 1.
      luout = 139
      nxyz=nx1*ny1*nz1
!      if (istep.gt.0)then
!      if (mod(istep,1000).eq.0)
!     >   call l2norm_2d_vortex
!      endif
 
      ifxyo = .true.
      if (istep.gt.1) ifxyo=.false.
 
      if (istep .eq. 0 .or. mod(istep,iostep).eq.0) then
      
      tnrm=time*c_sound/radcore
      c2=c_sound**2

!       write(6,'(a15,5e17.8,i2)')'Re,M,vm,L,ainf=',reynolds,machnumber,vmax,radcore,c_sound,nelt
       write(6,*)'Re,M,vm,L,ainf='
!       write(6,'(5(e17.8))')reynolds,machnumber,vmax,radcore,c_sound
       write(6,*)reynolds,machnumber,vmax,radcore,c_sound
!       write(zefn,'(a11,e10.4)')'profiles_t=',tnrm
!       open(unit=139,file=zefn,form="formatted")
      write(zefn,'(a16,e11.5,a1,i1)') 'profiles/prof_t=',tnrm,'p',nid
      open(unit=luout,file=zefn,form="formatted")
!       write(luout,*)'#r,uthet,rho,P,radmach,reu:t,tau=',tnrm,
!       > time*muref/(radcore**2)
      do e=1,nelt
      do iz=1,nz1 
      do iy=1,ny1
      do ix=1,nx1
         if (abs(ym1(ix,iy,iz,e)).lt.1.0e-06 .and. 
     >           xm1(ix,iy,iz,e) .ge. xctr) then
         rad=(xm1(ix,iy,iz,e)-xctr)/radcore
         rho=u(ix,iy,iz,1,e)
         uvel=u(ix,iy,iz,2,e)
         vvel=u(ix,iy,iz,3,e)
         rhoe=u(ix,iy,iz,5,e)
         temperature=(1.0/cvgref/rho)*(rhoe-0.5*(uvel**2+vvel**2)/rho)
         uvel=uvel/rho       
         vvel=vvel/rho/c_sound
	   
         write(luout,'(6e17.8)')rad,vvel,rho, 
     >MixtPerf_P_DRT(rho,rgasref,temperature)/c2,uvel/c_sound, 
     >uvel*reynolds
         end if ! abs
      enddo ! ix
      enddo ! iy
      enddo ! iz
      enddo ! e
      close(luout)
     
      endif ! istep .eq. 0

! sigh. need settime to bend to my will
!      time=time_cmt
!      dt=dt_cmt

!      if (mod(istep,iostep).eq.0) call comp_vort3(vrt,wk1,wk2,vx,vy,vz)
!      if (mod(istep,iostep).eq.0) call outpost(vx,vy,vz,vrt,t,'vrt')

      return
      end

!-----------------------------------------------------------------------

      subroutine entropy_viscosity
      include 'SIZE'
      return
      end

!-----------------------------------------------------------------------

      subroutine cmt_userEOS(ix,iy,iz,eg)
      include 'SIZE'
      include 'NEKUSE'
      include 'PARALLEL'
      include 'CMTDATA'
      include 'PERFECTGAS'

      integer e,eg
      e=gllel(eg)

      cp=cpgref
      cv=cvgref
      temp=e_internal/cv
      asnd=MixtPerf_C_GRT(gmaref,rgasref,temp)
      pres=MixtPerf_P_DRT(rho,rgasref,temp)

      return
      end

c-----------------------------------------------------------------------

      subroutine uservp (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      include 'CMTDATA'

      integer e,f,eg
c     e = gllel(eg)

      mu = muref
      lambda = -2.0/3.0*mu
      udiff = mu*cpgref/prlam
      utrans=0.
      nu_s=0.0
      return
      end

c-----------------------------------------------------------------------

      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)
c     Note: this is an acceleration term, NOT a force!
c     Thus, ffx will subsequently be multiplied by rho(x,t).
      ffx = 0.0
      ffy = 0.0
      ffz = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)
      qvol   = 0.0
      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'NEKUSE'
      include 'CMTDATA'
     
      integer f,e,eg
      flux=0.0
      molarmass=molmass
      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      include 'CMTDATA'
      include 'PERFECTGAS'

      integer e,eg, eqnum
      real r2
      real bvort2,uxinf,uyinf,tempinf2
      common /VORTXSTRN/ bvort2,uxinf,uyinf,tempinf2
      common /usrparm/ reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr
      real reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr

!      gmaref = 1.4
!      rgasref = MixtPerf_R_M(8314.3,dum)
      xctr = 10.0!22.50
      yctr = 0.0!2.5
      x=x-xctr
      y=y-yctr
      r2=(x**2+y**2)
      pi = 4.0*atan(1.0)
      machnumber = 0.5
      phi= 1.0
      uxinf = 0.0
      uyinf = 0.0
      tempinf = 1.0
      tempinf2 = tempinf
! derived quantities
!      cvgref = rgasref/(gmaref-1.0)
!      cpgref = rgasref + cvgref
!      c_sound = MixtPerf_C_GRT(gmaref,rgasref,Tempinf)
!      vmax=machnumber*c_sound
      bvort = vmax*2.0*sqrt(2.0)*pi*exp(-0.5)
      bvort2 = bvort

      varsic(1) = phi*(Tempinf-(gmaref-1.0)*bvort**2/(16.0*gmaref
     >           *pi**2)* exp(2.0*(1.0-r2)))**(1.0/(gmaref-1.0))
      varsic(2) = varsic(1)*(uxinf-bvort*exp((1.0-r2))*y/(2.0*pi))
      varsic(3) = varsic(1)*(uyinf+bvort*exp((1.0-r2))*x/(2.0*pi))
      varsic(4) = 0.0
      varsic(5) = varsic(1)**gmaref/(gmaref-1.) +
     >            0.5*(varsic(2)**2+varsic(3)**2+varsic(4)**2)/varsic(1)
      rho= varsic(1)/phi
      temp=Tempinf-(gmaref-1.0)*bvort**2/(16.0*gmaref*pi**2)*
     >           exp(2.0*(1.0-r2))
      pres=MixtPerf_P_DRT(rho,rgasref,temp)
      ux = varsic(2)/varsic(1)
      uy = varsic(3)/varsic(1)
      uz = varsic(4)/varsic(1)
!     call cmt_userEOS(ix,iy,iz,eg)
      cp=cpgref
      cv=cvgref
!      write(6,*)'USERIC'
!      write(6,*)varsic(1),varsic(2),varsic(3),varsic(4),varsic(5)
!      write(6,*)rgasref
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'
      include 'CMTBCDATA'
      include 'CMTDATA'
      include 'CMTTIMERS'
      include 'PERFECTGAS'

!      COMMON /CMTIOFLGS/   res_freq, fld_freq
      integer             fld_freq
      COMMON /CMTFLTRP/   NCUT, NCUTD, WGHT, WGHTD
      real                 WGHT, WGHTD
      common /usrparm/ reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr
      real reynolds,machnumber,vmax,radcore,c_sound,tempinf,
     >                 rhoinf,bvort,xctr,yctr

      molmass    = 8314.3
      coeflambda = -2.0/3.0
      suthcoef   = 1.0
      reftemp    = 1.0
      prlam      = 0.72
      gmaref     = 1.4
      pi         = 4.0*atan(1.0)
      reynolds   = 5000.0
      rhoinf	 = 1.0
      pinfty     = 1.0
      tempinf    = 1.0
      machnumber = 0.5
      radcore    = 1.0/sqrt(2.0)
      rgasref    = MixtPerf_R_M(molmass,dum)
      cvgref     = rgasref/(gmaref-1.0)
      cpgref     = MixtPerf_Cp_CvR(cvgref,rgasref)
      gmaref     = MixtPerf_G_CpR(cpgref,rgasref) 
      c_sound    = MixtPerf_C_GRT(gmaref,rgasref,tempinf)
      vmax	 = machnumber*c_sound
      muref      = rhoinf*vmax/reynolds

      fld_freq  = 50000
      res_freq  = 5000000
      flio_freq = 10000

      nbc=0
      do i=1,2 ! get density output
         call add_temp(f2tbc,nbc,1)
      enddo
      igeom=2
      call setup_topo

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      include 'CMTBCDATA'
      include 'CMTDATA'

      common /CMTVISCO/ifbr1,ifvisc
      logical ifbr1,ifvisc
      
      call fix_geom

      outflsub=.true.
      IFFLTR=.true.
      IFCNTFILT=.false.
      rfluwall=.true.
      ifrestart=.false.
      ifbr1=.true.
      ifvisc=.true.
      ifptpart=.true.
!      ifsip=.false.
!      gasmodel=1
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'TOTAL'
c
      return
      end
!-----------------------------------------------------------------------
      subroutine cmt_usrflt(rmult)
      include 'SIZE'
      real rmult(nx1)
      real alpfilt
      integer sfilt, kut
      real eta, etac

      call rone(rmult,nx1)

      alpfilt=36.0 ! H&W 5.3

      kut=max((nx1/2),nx1-2)
      kut=nx1/2

      sfilt=8
      etac=real(kut)/real(nx1)
      do i=kut,nx1
         eta=real(i)/real(nx1)
         rmult(i)=exp(-alpfilt*((eta-etac)/(1.0-etac))**sfilt)
      enddo
      return
      end
!-----------------------------------------------------------------------
      subroutine l2norm_2d_vortex
      include 'SIZE'
      include 'MASS'
      include 'GEOM'
      include 'TSTEP'
      include 'CMTDATA'

      real  sumcvars_l2(5), l2_normscvars(5)
      integer e,eq
      integer nloop
      real bvort,uxinf,uyinf,tempinf
      common /VORTXSTRN/ bvort,uxinf,uyinf,tempinf

      xctr = 10.0!22.50
      yctr = 0.0!2.5
      do eq=1,toteq
      sumcvars_l2(eq) = 0.
      l2_normscvars(eq) = 0.
      enddo
      pi = 4.0*atan(1.0)
      phigic = 1.0
      num_steps = int(1/dt_cmt)
      xctrnew = xctr + uxinf*time_cmt
      yctrnew = yctr + uyinf*time_cmt
      nloop = int(int(uxinf*time_cmt)/10) + 1
      if(xctrnew.gt.10.0)then
         xctrnew = (xctrnew - nloop*10.0)
      endif
      do e=1,nelv
         do iz=1,nz1
         do iy=1,ny1
         do ix=1,nx1
           
            x=xm1(ix,iy,iz,e)-xctrnew
            y=ym1(ix,iy,iz,e)-yctrnew
            if(x.gt.5.0)
     >         x = -5.0 + (x-5.0)
            if(x.lt.-5.0)
     >         x = 5.0 - (abs(x) - 5.0)
            r2=(x)**2+(y)**2
            
            temp = Tempinf-(gmaref-1.0)*bvort**2/(16.0*gmaref
     >             *pi**2)* exp(2.0*(1.0-r2))
            ux = uxinf-bvort*exp((1.0-r2))*y/(2.0*pi)
            uy = uyinf+bvort*exp((1.0-r2))*x/(2.0*pi)
            uz = 0.0
            rhognbc = (temp)**(1.0/(gmaref-1.0))
            prsnbc= rhognbc**gmaref
            phignbc = 1.0

            varsic(1) = rhognbc*phignbc
            varsic(2) = ux*varsic(1)
            varsic(3) = uy*varsic(1)
            varsic(4) = uz*varsic(1)
            varsic(5) = varsic(1)**gmaref/(gmaref-1.) +
     >            0.5*(varsic(2)**2+varsic(3)**2+varsic(4)**2)/varsic(1)
            do eq=1,toteq 
               sumcvars_l2(eq) = sumcvars_l2(eq) + bm1(ix,iy,iz,e)*
     >                          (varsic(eq) - U(ix,iy,iz,eq,e))**2
               l2_normscvars(eq) = l2_normscvars(eq) + bm1(ix,iy,iz,e)*
     >                          (varsic(eq) )**2
            enddo
         enddo
         enddo
         enddo
      enddo
      do eq=1,toteq
         sumcvars_l2(eq) = glsum(sumcvars_l2(eq),1)
      enddo
      if(nio.eq.0) then
         open(unit=22,file="l2norms.dat",form="formatted",
     >        access="append")
         write(22,'(a12,6e17.8)')
     >          'L2err_norms ',time_cmt,(sqrt(sumcvars_l2(i)),i=1,5)
         close(22)
      endif
      if(nio.eq.0) write(6,*)'center location ',time_cmt,xctrnew,yctrnew
      return
      end
!-----------------------------------------------------------------------
